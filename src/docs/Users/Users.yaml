paths:
  /api/users/:
    get:
      summary: Obtiene todos los usuarios
      tags:
        - Users
      responses:
        200:
          description: Los usuarios fueron obtenidos de la base de datos
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: El estado de la respuesta
                    value: success
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#components/schemas/User'
                
        500:
          description: Error interno del servidor. Usualmente es generado por una query defectuosa o por un fallo de conexion en la base de datos
  /api/users/{uid}:
    get:
      summary: Obtiene un usuario por su id
      tags:
        -Users
      parameters:
        - name: uid
          in: path
          description: El id del usuario
          required: true
          schema:
            type string
      responses:
        200:
          description: El usuario fue obtenido de la base de datos
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: El estado de la respuesta
                    value: success
                    example: success
                  payload:
                    $ref: '#components/schemas/User'

        500:
          description: Error interno del servidor. Usualmente es generado por una query defectuosa o por un fallo de conexion en la base de datos
    put:
      summary: Actualiza un usuario a partir de su id
      tags:
        -Users
      parameters:
        - name: uid
          in: path
          description: El id del usuario
          required: true
          schema:
            type string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/updateUser'
components:
    schemas:
      User:
        type: object
        properties:
          _id:
            type: ObjectId
            description: El Id del usuario
            example: 1a2s1d1f2r
          first_name:
            type: string
            description: El nombre del usuario
            example: Marcelo
          last_name:
            type: string
            description: El email del usuario
            example: Tevez
          email:
            type: string
            description: El email del usuario
            example: Marcelo.tevez@gmail.com
          password:
            type: string
            description: La constraseña del usuario
            example: Marcetevez10
        example:
          _id: 75abc
          first_name: Jere
          last_name: Messi
          email: jere.messi10@gmail.com
          password: campeonMundial2022
    requestBodies:
      updateUser:
        type: object
        required:
          - first_name
          - last_name
          - email
          - password
        properties:
          first_name:
            type: string
            description: El nombre del usuario
            example: Marcelo
          last_name:
            type: string
            description: El email del usuario
            example: Tevez
          email:
            type: string
            description: El email del usuario
            example: Marcelo.tevez@gmail.com
          password:
            type: string
            description: La constraseña del usuario
            example: Marcetevez10
            role:
              type: string
              description: El rol del usuario
        example:
          _id: 75abc
          first_name: Jere
          last_name: Messi
          email: jere.messi10@gmail.com
          password: campeonMundial2022

